<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sugon.iris.sugondata.mybaties.mapper.db2.FileRinseRegularMapper">
  <resultMap id="BaseResultMap" type="com.sugon.iris.sugondomain.entities.mybatiesEntity.db2.FileRinseRegularEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="file_rinse_detail_id" jdbcType="BIGINT" property="fileRinseDetailId" />
    <result column="regular_detail_id" jdbcType="BIGINT" property="regularDetailId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, file_rinse_detail_id, regular_detail_id, user_id,type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_rinse_regular
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByFileRinseDetailId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from file_rinse_regular
    where file_rinse_detail_id = #{fileRinseDetailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_rinse_regular
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByFileRinseDetailId" parameterType="java.lang.Long">
    delete from file_rinse_regular
    where file_rinse_detail_id = #{fileRinseDetailId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sugon.iris.sugondomain.entities.mybatiesEntity.db2.FileRinseRegularEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into file_rinse_regular (file_rinse_detail_id, regular_detail_id, 
      user_id,type)
    values (#{fileRinseDetailId,jdbcType=BIGINT}, #{regularDetailId,jdbcType=BIGINT},
      #{userId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sugon.iris.sugondomain.entities.mybatiesEntity.db2.FileRinseRegularEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into file_rinse_regular
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileRinseDetailId != null">
        file_rinse_detail_id,
      </if>
      <if test="regularDetailId != null">
        regular_detail_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileRinseDetailId != null">
        #{fileRinseDetailId,jdbcType=BIGINT},
      </if>
      <if test="regularDetailId != null">
        #{regularDetailId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sugon.iris.sugondomain.entities.mybatiesEntity.db2.FileRinseRegularEntity">
    update file_rinse_regular
    <set>
      <if test="fileRinseDetailId != null">
        file_rinse_detail_id = #{fileRinseDetailId,jdbcType=BIGINT},
      </if>
      <if test="regularDetailId != null">
        regular_detail_id = #{regularDetailId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sugon.iris.sugondomain.entities.mybatiesEntity.db2.FileRinseRegularEntity">
    update file_rinse_regular
    set file_rinse_detail_id = #{fileRinseDetailId,jdbcType=BIGINT},
      regular_detail_id = #{regularDetailId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>